import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as n,c as o,d as i,e,b as a,f as d}from"./app-aac75ad2.js";const g="/assets/images/distributed-system/raft/single_node.png",l="/assets/images/distributed-system/raft/single_node_demo.png",c="/assets/images/distributed-system/raft/client_single_node.png",f="/assets/images/distributed-system/raft/client_multiple_node.png",p="/assets/images/distributed-system/raft/node_init_state.png",_="/assets/images/distributed-system/raft/client_turn_to_candidate.png",m="/assets/images/distributed-system/raft/candidate_request_vote.png",u="/assets/images/distributed-system/raft/candidate_receive_reply.png",b="/assets/images/distributed-system/raft/client_send_data_to_leader.png",y="/assets/images/distributed-system/raft/leader_sync_log.png",h="/assets/images/distributed-system/raft/leader_receive_reply.png",w="/assets/images/distributed-system/raft/leader_sync_state.png",x="/assets/images/distributed-system/raft/node_start_timer.png",z="/assets/images/distributed-system/raft/node_election_timeout.png",v="/assets/images/distributed-system/raft/node_election_timeout_condition.png",k="/assets/images/distributed-system/raft/node_turn_to_candidate_after_timeout.png",L="/assets/images/distributed-system/raft/node_send_vote_after_timeout.png",E="/assets/images/distributed-system/raft/node_reply_vote_to_candidate.png",N="/assets/images/distributed-system/raft/node_reset_election_timeout.png",R="/assets/images/distributed-system/raft/node_turn_to_leader.png",V="/assets/images/distributed-system/raft/leader_send_append_entry.png",B="/assets/images/distributed-system/raft/leader_heartbeat_timeout.png",C="/assets/images/distributed-system/raft/leader_receive_reply_from_follower.png",I="/assets/images/distributed-system/raft/send_reply_process.png",q="/assets/images/distributed-system/raft/split_node_example.png",S="/assets/images/distributed-system/raft/split_node_example_2.png",T="/assets/images/distributed-system/raft/split_node_example_3.png",j="/assets/images/distributed-system/raft/split_node_example_4.png",A="/assets/images/distributed-system/raft/log_replication_1.png",D="/assets/images/distributed-system/raft/log_replication_2.png",F="/assets/images/distributed-system/raft/log_replication_3.png",G="/assets/images/distributed-system/raft/log_replication_4.png",H="/assets/images/distributed-system/raft/log_replication_5.png",J="/assets/images/distributed-system/raft/log_replication_6.png",K="/assets/images/distributed-system/raft/log_replication_7.png",M="/assets/images/distributed-system/raft/log_replication_8.png",O="/assets/images/distributed-system/raft/log_replication_9.png",P={},Q=d('<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><figure><img src="'+g+'" alt="单个服务节点" width="400" tabindex="0" loading="lazy"><figcaption>单个服务节点</figcaption></figure><figure><img src="'+l+'" alt="服务节点可以是数据库" width="400" tabindex="0" loading="lazy"><figcaption>服务节点可以是数据库</figcaption></figure><figure><img src="'+c+'" alt="客户端" width="400" tabindex="0" loading="lazy"><figcaption>客户端</figcaption></figure><figure><img src="'+f+'" alt="分布式一致性" width="400" tabindex="0" loading="lazy"><figcaption>分布式一致性</figcaption></figure><figure><img src="'+p+'" alt="节点初始状态" width="400" tabindex="0" loading="lazy"><figcaption>节点初始状态</figcaption></figure><figure><img src="'+_+'" alt="节点-&gt;候选者candidate" width="400" tabindex="0" loading="lazy"><figcaption>节点-&gt;候选者candidate</figcaption></figure><figure><img src="'+m+'" alt="candidate发起投票" width="400" tabindex="0" loading="lazy"><figcaption>candidate发起投票</figcaption></figure><figure><img src="'+u+'" alt="candidate收到投票信息" width="400" tabindex="0" loading="lazy"><figcaption>candidate收到投票信息</figcaption></figure><figure><img src="'+b+'" alt="客户端发送数据给leader" width="400" tabindex="0" loading="lazy"><figcaption>客户端发送数据给leader</figcaption></figure><figure><img src="'+y+'" alt="leader同步数据到follower" width="400" tabindex="0" loading="lazy"><figcaption>leader同步数据到follower</figcaption></figure><figure><img src="'+h+'" alt="leader接收follower响应" width="400" tabindex="0" loading="lazy"><figcaption>leader接收follower响应</figcaption></figure><figure><img src="'+w+'" alt="leader同步节点状态" width="400" tabindex="0" loading="lazy"><figcaption>leader同步节点状态</figcaption></figure><h2 id="leader-election" tabindex="-1"><a class="header-anchor" href="#leader-election" aria-hidden="true">#</a> Leader Election</h2><figure><img src="'+x+'" alt="没有节点时，等待150~300ms转变为candidate" width="400" tabindex="0" loading="lazy"><figcaption>没有节点时，等待150~300ms转变为candidate</figcaption></figure><figure><img src="'+z+'" alt="超时问题" width="400" tabindex="0" loading="lazy"><figcaption>超时问题</figcaption></figure><figure><img src="'+v+'" alt="超时条件" width="400" tabindex="0" loading="lazy"><figcaption>超时条件</figcaption></figure><figure><img src="'+k+'" alt="超时后，follower-&gt;candidate" width="400" tabindex="0" loading="lazy"><figcaption>超时后，follower-&gt;candidate</figcaption></figure><figure><img src="'+L+'" alt="转变为candidate的同时发送vote请求" width="400" tabindex="0" loading="lazy"><figcaption>转变为candidate的同时发送vote请求</figcaption></figure><figure><img src="'+E+'" alt="收到vote请求的节点返回vote信息" width="400" tabindex="0" loading="lazy"><figcaption>收到vote请求的节点返回vote信息</figcaption></figure><figure><img src="'+N+'" alt="重置超时时间" width="400" tabindex="0" loading="lazy"><figcaption>重置超时时间</figcaption></figure><figure><img src="'+R+'" alt="candidate成为leader" width="400" tabindex="0" loading="lazy"><figcaption>candidate成为leader</figcaption></figure><figure><img src="'+V+'" alt="发送心跳信息" width="400" tabindex="0" loading="lazy"><figcaption>发送心跳信息</figcaption></figure><figure><img src="'+B+'" alt="定时发送心跳信息" width="400" tabindex="0" loading="lazy"><figcaption>定时发送心跳信息</figcaption></figure><figure><img src="'+C+'" alt="follower返回确认心跳信息" width="400" tabindex="0" loading="lazy"><figcaption>follower返回确认心跳信息</figcaption></figure><figure><img src="'+I+'" alt="重复一直到出现candidate" width="400" tabindex="0" loading="lazy"><figcaption>重复一直到出现candidate</figcaption></figure><figure><img src="'+q+'" alt="脑裂示例" width="400" tabindex="0" loading="lazy"><figcaption>脑裂示例</figcaption></figure><figure><img src="'+S+'" alt="发起投票" width="400" tabindex="0" loading="lazy"><figcaption>发起投票</figcaption></figure><figure><img src="'+T+'" alt="每个candidate只有半数票，无法成为leader" width="400" tabindex="0" loading="lazy"><figcaption>每个candidate只有半数票，无法成为leader</figcaption></figure><figure><img src="'+j+'" alt="重新发起选举" width="400" tabindex="0" loading="lazy"><figcaption>重新发起选举</figcaption></figure><h2 id="log-replication" tabindex="-1"><a class="header-anchor" href="#log-replication" aria-hidden="true">#</a> Log Replication</h2><figure><img src="'+A+'" alt="client发送变更到leader" width="400" tabindex="0" loading="lazy"><figcaption>client发送变更到leader</figcaption></figure><figure><img src="'+D+'" alt="leader同步变更到follower" width="400" tabindex="0" loading="lazy"><figcaption>leader同步变更到follower</figcaption></figure><figure><img src="'+F+'" alt="follower确认收到的变更" width="400" tabindex="0" loading="lazy"><figcaption>follower确认收到的变更</figcaption></figure><figure><img src="'+G+'" alt="leader返回response给client" width="400" tabindex="0" loading="lazy"><figcaption>leader返回response给client</figcaption></figure><figure><img src="'+H+'" alt="leader更新自身状态同时同步follower" width="400" tabindex="0" loading="lazy"><figcaption>leader更新自身状态同时同步follower</figcaption></figure><figure><img src="'+J+'" alt="脑裂情况下的LogReplication" width="400" tabindex="0" loading="lazy"><figcaption>脑裂情况下的LogReplication</figcaption></figure><figure><img src="'+K+'" alt="两个client分别发送变更给两个leader" width="400" tabindex="0" loading="lazy"><figcaption>两个client分别发送变更给两个leader</figcaption></figure><figure><img src="'+M+'" alt="当网络屏障恢复" width="400" tabindex="0" loading="lazy"><figcaption>当网络屏障恢复</figcaption></figure><figure><img src="'+O+'" alt="少数节点会回滚自身状态，与多数节点保持一致" width="400" tabindex="0" loading="lazy"><figcaption>少数节点会回滚自身状态，与多数节点保持一致</figcaption></figure><p>该日志条目当前未提交，因此不会更新节点的值。</p><h2 id="参考文章" tabindex="-1"><a class="header-anchor" href="#参考文章" aria-hidden="true">#</a> 参考文章</h2>',42),U={href:"http://thesecretlivesofdata.com/raft/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://cloud.tencent.com/developer/article/1082991",target:"_blank",rel:"noopener noreferrer"};function X(Y,Z){const t=r("ExternalLinkIcon");return n(),o("div",null,[Q,i("p",null,[i("a",U,[e("raft动画演示"),a(t)])]),i("p",null,[i("a",W,[e("由Consul谈到Raft"),a(t)])])])}const ti=s(P,[["render",X],["__file","raft介绍.html.vue"]]);export{ti as default};
